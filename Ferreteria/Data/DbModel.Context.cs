//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FerreteriaEntities : DbContext
    {
        public FerreteriaEntities()
            : base("name=FerreteriaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<pedido_cliente> pedido_cliente { get; set; }
        public virtual DbSet<pedido_cliente_producto> pedido_cliente_producto { get; set; }
        public virtual DbSet<pedido_cliente_servicio> pedido_cliente_servicio { get; set; }
        public virtual DbSet<pedido_completo> pedido_completo { get; set; }
        public virtual DbSet<pedido_completo_producto> pedido_completo_producto { get; set; }
        public virtual DbSet<pedido_completo_servicio> pedido_completo_servicio { get; set; }
        public virtual DbSet<pedido_solo_servicio> pedido_solo_servicio { get; set; }
        public virtual DbSet<pedido_solo_servicio_servicio> pedido_solo_servicio_servicio { get; set; }
        public virtual DbSet<producto> producto { get; set; }
        public virtual DbSet<servicio> servicio { get; set; }
        public virtual DbSet<transporte> transporte { get; set; }
        public virtual DbSet<usuario> usuario { get; set; }
        public virtual DbSet<v_categoria_producto> v_categoria_producto { get; set; }
        public virtual DbSet<v_categoria_servicio> v_categoria_servicio { get; set; }
        public virtual DbSet<v_scantidad_pclp_categoria> v_scantidad_pclp_categoria { get; set; }
        public virtual DbSet<v_scantidad_pcls_categoria> v_scantidad_pcls_categoria { get; set; }
        public virtual DbSet<v_scantidad_pcop_categoria> v_scantidad_pcop_categoria { get; set; }
        public virtual DbSet<v_scantidad_pcos_categoria> v_scantidad_pcos_categoria { get; set; }
        public virtual DbSet<v_scantidad_pss_categoria> v_scantidad_pss_categoria { get; set; }
        public virtual DbSet<v_spedido_cliente> v_spedido_cliente { get; set; }
        public virtual DbSet<v_spedido_cliente_producto> v_spedido_cliente_producto { get; set; }
        public virtual DbSet<v_spedido_cliente_servicio> v_spedido_cliente_servicio { get; set; }
        public virtual DbSet<v_spedido_completo> v_spedido_completo { get; set; }
        public virtual DbSet<v_spedido_completo_producto> v_spedido_completo_producto { get; set; }
        public virtual DbSet<v_spedido_completo_servicio> v_spedido_completo_servicio { get; set; }
        public virtual DbSet<v_spedido_solo_servicio> v_spedido_solo_servicio { get; set; }
        public virtual DbSet<v_spedido_solo_servicio_servicio> v_spedido_solo_servicio_servicio { get; set; }
    
        public virtual int sp_ipedido_cliente_cliente(string cedula_cliente, string nombre_cliente, Nullable<System.DateTime> fecha, Nullable<decimal> subtotal, Nullable<decimal> iva, Nullable<decimal> total)
        {
            var cedula_clienteParameter = cedula_cliente != null ?
                new ObjectParameter("cedula_cliente", cedula_cliente) :
                new ObjectParameter("cedula_cliente", typeof(string));
    
            var nombre_clienteParameter = nombre_cliente != null ?
                new ObjectParameter("nombre_cliente", nombre_cliente) :
                new ObjectParameter("nombre_cliente", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("subtotal", subtotal) :
                new ObjectParameter("subtotal", typeof(decimal));
    
            var ivaParameter = iva.HasValue ?
                new ObjectParameter("iva", iva) :
                new ObjectParameter("iva", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ipedido_cliente_cliente", cedula_clienteParameter, nombre_clienteParameter, fechaParameter, subtotalParameter, ivaParameter, totalParameter);
        }
    
        public virtual int sp_ipedido_cliente_producto(Nullable<int> id_pedido_cliente, Nullable<int> id_producto, Nullable<decimal> cantidad, Nullable<decimal> precio_total)
        {
            var id_pedido_clienteParameter = id_pedido_cliente.HasValue ?
                new ObjectParameter("id_pedido_cliente", id_pedido_cliente) :
                new ObjectParameter("id_pedido_cliente", typeof(int));
    
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var precio_totalParameter = precio_total.HasValue ?
                new ObjectParameter("precio_total", precio_total) :
                new ObjectParameter("precio_total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ipedido_cliente_producto", id_pedido_clienteParameter, id_productoParameter, cantidadParameter, precio_totalParameter);
        }
    
        public virtual int sp_ipedido_cliente_servicio(Nullable<int> id_pedido_cliente, Nullable<int> id_servicio, Nullable<decimal> cantidad, Nullable<decimal> precio_total)
        {
            var id_pedido_clienteParameter = id_pedido_cliente.HasValue ?
                new ObjectParameter("id_pedido_cliente", id_pedido_cliente) :
                new ObjectParameter("id_pedido_cliente", typeof(int));
    
            var id_servicioParameter = id_servicio.HasValue ?
                new ObjectParameter("id_servicio", id_servicio) :
                new ObjectParameter("id_servicio", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var precio_totalParameter = precio_total.HasValue ?
                new ObjectParameter("precio_total", precio_total) :
                new ObjectParameter("precio_total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ipedido_cliente_servicio", id_pedido_clienteParameter, id_servicioParameter, cantidadParameter, precio_totalParameter);
        }
    
        public virtual int sp_ipedido_completo_producto(Nullable<int> id_pedido_completo, Nullable<int> id_producto, Nullable<decimal> cantidad, Nullable<decimal> precio_total)
        {
            var id_pedido_completoParameter = id_pedido_completo.HasValue ?
                new ObjectParameter("id_pedido_completo", id_pedido_completo) :
                new ObjectParameter("id_pedido_completo", typeof(int));
    
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var precio_totalParameter = precio_total.HasValue ?
                new ObjectParameter("precio_total", precio_total) :
                new ObjectParameter("precio_total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ipedido_completo_producto", id_pedido_completoParameter, id_productoParameter, cantidadParameter, precio_totalParameter);
        }
    
        public virtual int sp_ipedido_completo_servicio(Nullable<int> id_pedido_completo, Nullable<int> id_servicio, Nullable<decimal> cantidad, Nullable<decimal> precio_total)
        {
            var id_pedido_completoParameter = id_pedido_completo.HasValue ?
                new ObjectParameter("id_pedido_completo", id_pedido_completo) :
                new ObjectParameter("id_pedido_completo", typeof(int));
    
            var id_servicioParameter = id_servicio.HasValue ?
                new ObjectParameter("id_servicio", id_servicio) :
                new ObjectParameter("id_servicio", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var precio_totalParameter = precio_total.HasValue ?
                new ObjectParameter("precio_total", precio_total) :
                new ObjectParameter("precio_total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ipedido_completo_servicio", id_pedido_completoParameter, id_servicioParameter, cantidadParameter, precio_totalParameter);
        }
    
        public virtual int sp_ipedido_completo_vendedor(string codigo_vendedor, string cedula_cliente, Nullable<System.DateTime> hora_atencion, Nullable<System.DateTime> hora_venta, Nullable<decimal> subtotal, Nullable<decimal> iva, Nullable<decimal> total)
        {
            var codigo_vendedorParameter = codigo_vendedor != null ?
                new ObjectParameter("codigo_vendedor", codigo_vendedor) :
                new ObjectParameter("codigo_vendedor", typeof(string));
    
            var cedula_clienteParameter = cedula_cliente != null ?
                new ObjectParameter("cedula_cliente", cedula_cliente) :
                new ObjectParameter("cedula_cliente", typeof(string));
    
            var hora_atencionParameter = hora_atencion.HasValue ?
                new ObjectParameter("hora_atencion", hora_atencion) :
                new ObjectParameter("hora_atencion", typeof(System.DateTime));
    
            var hora_ventaParameter = hora_venta.HasValue ?
                new ObjectParameter("hora_venta", hora_venta) :
                new ObjectParameter("hora_venta", typeof(System.DateTime));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("subtotal", subtotal) :
                new ObjectParameter("subtotal", typeof(decimal));
    
            var ivaParameter = iva.HasValue ?
                new ObjectParameter("iva", iva) :
                new ObjectParameter("iva", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ipedido_completo_vendedor", codigo_vendedorParameter, cedula_clienteParameter, hora_atencionParameter, hora_ventaParameter, subtotalParameter, ivaParameter, totalParameter);
        }
    
        public virtual int sp_ipedido_solo_servicio_constructor(string cedula_cliente, string codigo_constructor, string observaciones, Nullable<decimal> subtotal, Nullable<decimal> iva, Nullable<decimal> total)
        {
            var cedula_clienteParameter = cedula_cliente != null ?
                new ObjectParameter("cedula_cliente", cedula_cliente) :
                new ObjectParameter("cedula_cliente", typeof(string));
    
            var codigo_constructorParameter = codigo_constructor != null ?
                new ObjectParameter("codigo_constructor", codigo_constructor) :
                new ObjectParameter("codigo_constructor", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("observaciones", observaciones) :
                new ObjectParameter("observaciones", typeof(string));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("subtotal", subtotal) :
                new ObjectParameter("subtotal", typeof(decimal));
    
            var ivaParameter = iva.HasValue ?
                new ObjectParameter("iva", iva) :
                new ObjectParameter("iva", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ipedido_solo_servicio_constructor", cedula_clienteParameter, codigo_constructorParameter, observacionesParameter, subtotalParameter, ivaParameter, totalParameter);
        }
    
        public virtual int sp_ipedido_solo_servicio_servicio(Nullable<int> id_pedido_solo_servicio, Nullable<int> id_servicio, Nullable<decimal> cantidad, Nullable<decimal> precio_total)
        {
            var id_pedido_solo_servicioParameter = id_pedido_solo_servicio.HasValue ?
                new ObjectParameter("id_pedido_solo_servicio", id_pedido_solo_servicio) :
                new ObjectParameter("id_pedido_solo_servicio", typeof(int));
    
            var id_servicioParameter = id_servicio.HasValue ?
                new ObjectParameter("id_servicio", id_servicio) :
                new ObjectParameter("id_servicio", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var precio_totalParameter = precio_total.HasValue ?
                new ObjectParameter("precio_total", precio_total) :
                new ObjectParameter("precio_total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ipedido_solo_servicio_servicio", id_pedido_solo_servicioParameter, id_servicioParameter, cantidadParameter, precio_totalParameter);
        }
    
        public virtual ObjectResult<string> sp_spcl_servicio_dia(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_spcl_servicio_dia", fechaParameter);
        }
    
        public virtual ObjectResult<string> sp_spco_dia(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_spco_dia", fechaParameter);
        }
    
        public virtual ObjectResult<string> sp_spco_servicio_dia(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_spco_servicio_dia", fechaParameter);
        }
    
        public virtual ObjectResult<string> sp_sps_dia(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_sps_dia", fechaParameter);
        }
    
        public virtual ObjectResult<string> sp_sps_servicio_dia(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_sps_servicio_dia", fechaParameter);
        }
    
        public virtual int sp_upedido_cliente_bodega(Nullable<int> id, Nullable<System.DateTime> hora_recibido_bodega, Nullable<System.DateTime> hora_salida_bodega)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var hora_recibido_bodegaParameter = hora_recibido_bodega.HasValue ?
                new ObjectParameter("hora_recibido_bodega", hora_recibido_bodega) :
                new ObjectParameter("hora_recibido_bodega", typeof(System.DateTime));
    
            var hora_salida_bodegaParameter = hora_salida_bodega.HasValue ?
                new ObjectParameter("hora_salida_bodega", hora_salida_bodega) :
                new ObjectParameter("hora_salida_bodega", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upedido_cliente_bodega", idParameter, hora_recibido_bodegaParameter, hora_salida_bodegaParameter);
        }
    
        public virtual int sp_upedido_cliente_factura(Nullable<int> id, Nullable<System.DateTime> fecha_factura, string codigo_cajero)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fecha_facturaParameter = fecha_factura.HasValue ?
                new ObjectParameter("fecha_factura", fecha_factura) :
                new ObjectParameter("fecha_factura", typeof(System.DateTime));
    
            var codigo_cajeroParameter = codigo_cajero != null ?
                new ObjectParameter("codigo_cajero", codigo_cajero) :
                new ObjectParameter("codigo_cajero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upedido_cliente_factura", idParameter, fecha_facturaParameter, codigo_cajeroParameter);
        }
    
        public virtual int sp_upedido_cliente_transporte(Nullable<int> id, string codigo_conductor, Nullable<System.DateTime> hora_inicia_transporte, Nullable<System.DateTime> hora_finaliza_transporte)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var codigo_conductorParameter = codigo_conductor != null ?
                new ObjectParameter("codigo_conductor", codigo_conductor) :
                new ObjectParameter("codigo_conductor", typeof(string));
    
            var hora_inicia_transporteParameter = hora_inicia_transporte.HasValue ?
                new ObjectParameter("hora_inicia_transporte", hora_inicia_transporte) :
                new ObjectParameter("hora_inicia_transporte", typeof(System.DateTime));
    
            var hora_finaliza_transporteParameter = hora_finaliza_transporte.HasValue ?
                new ObjectParameter("hora_finaliza_transporte", hora_finaliza_transporte) :
                new ObjectParameter("hora_finaliza_transporte", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upedido_cliente_transporte", idParameter, codigo_conductorParameter, hora_inicia_transporteParameter, hora_finaliza_transporteParameter);
        }
    
        public virtual int sp_upedido_completo_bodega(Nullable<int> id, Nullable<System.DateTime> hora_recibido_bodega, Nullable<System.DateTime> hora_salida_bodega)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var hora_recibido_bodegaParameter = hora_recibido_bodega.HasValue ?
                new ObjectParameter("hora_recibido_bodega", hora_recibido_bodega) :
                new ObjectParameter("hora_recibido_bodega", typeof(System.DateTime));
    
            var hora_salida_bodegaParameter = hora_salida_bodega.HasValue ?
                new ObjectParameter("hora_salida_bodega", hora_salida_bodega) :
                new ObjectParameter("hora_salida_bodega", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upedido_completo_bodega", idParameter, hora_recibido_bodegaParameter, hora_salida_bodegaParameter);
        }
    
        public virtual int sp_upedido_completo_factura(Nullable<int> id, Nullable<System.DateTime> fecha_factura, string codigo_cajero)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fecha_facturaParameter = fecha_factura.HasValue ?
                new ObjectParameter("fecha_factura", fecha_factura) :
                new ObjectParameter("fecha_factura", typeof(System.DateTime));
    
            var codigo_cajeroParameter = codigo_cajero != null ?
                new ObjectParameter("codigo_cajero", codigo_cajero) :
                new ObjectParameter("codigo_cajero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upedido_completo_factura", idParameter, fecha_facturaParameter, codigo_cajeroParameter);
        }
    
        public virtual int sp_upedido_completo_transporte(Nullable<int> id, string codigo_conductor, Nullable<System.DateTime> hora_inicia_transporte, Nullable<System.DateTime> hora_finaliza_transporte)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var codigo_conductorParameter = codigo_conductor != null ?
                new ObjectParameter("codigo_conductor", codigo_conductor) :
                new ObjectParameter("codigo_conductor", typeof(string));
    
            var hora_inicia_transporteParameter = hora_inicia_transporte.HasValue ?
                new ObjectParameter("hora_inicia_transporte", hora_inicia_transporte) :
                new ObjectParameter("hora_inicia_transporte", typeof(System.DateTime));
    
            var hora_finaliza_transporteParameter = hora_finaliza_transporte.HasValue ?
                new ObjectParameter("hora_finaliza_transporte", hora_finaliza_transporte) :
                new ObjectParameter("hora_finaliza_transporte", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upedido_completo_transporte", idParameter, codigo_conductorParameter, hora_inicia_transporteParameter, hora_finaliza_transporteParameter);
        }
    
        public virtual int sp_upedido_solo_servicio_bodega(Nullable<int> id, Nullable<System.DateTime> hora_recibido_bodega, Nullable<System.DateTime> hora_salida_bodega)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var hora_recibido_bodegaParameter = hora_recibido_bodega.HasValue ?
                new ObjectParameter("hora_recibido_bodega", hora_recibido_bodega) :
                new ObjectParameter("hora_recibido_bodega", typeof(System.DateTime));
    
            var hora_salida_bodegaParameter = hora_salida_bodega.HasValue ?
                new ObjectParameter("hora_salida_bodega", hora_salida_bodega) :
                new ObjectParameter("hora_salida_bodega", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upedido_solo_servicio_bodega", idParameter, hora_recibido_bodegaParameter, hora_salida_bodegaParameter);
        }
    
        public virtual int sp_upedido_solo_servicio_factura(Nullable<int> id, Nullable<System.DateTime> fecha_factura, string codigo_cajero)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fecha_facturaParameter = fecha_factura.HasValue ?
                new ObjectParameter("fecha_factura", fecha_factura) :
                new ObjectParameter("fecha_factura", typeof(System.DateTime));
    
            var codigo_cajeroParameter = codigo_cajero != null ?
                new ObjectParameter("codigo_cajero", codigo_cajero) :
                new ObjectParameter("codigo_cajero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upedido_solo_servicio_factura", idParameter, fecha_facturaParameter, codigo_cajeroParameter);
        }
    
        public virtual int sp_upedido_solo_servicio_transporte(Nullable<int> id, string codigo_conductor, Nullable<System.DateTime> hora_inicia_transporte, Nullable<System.DateTime> hora_finaliza_transporte)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var codigo_conductorParameter = codigo_conductor != null ?
                new ObjectParameter("codigo_conductor", codigo_conductor) :
                new ObjectParameter("codigo_conductor", typeof(string));
    
            var hora_inicia_transporteParameter = hora_inicia_transporte.HasValue ?
                new ObjectParameter("hora_inicia_transporte", hora_inicia_transporte) :
                new ObjectParameter("hora_inicia_transporte", typeof(System.DateTime));
    
            var hora_finaliza_transporteParameter = hora_finaliza_transporte.HasValue ?
                new ObjectParameter("hora_finaliza_transporte", hora_finaliza_transporte) :
                new ObjectParameter("hora_finaliza_transporte", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upedido_solo_servicio_transporte", idParameter, codigo_conductorParameter, hora_inicia_transporteParameter, hora_finaliza_transporteParameter);
        }
    }
}
